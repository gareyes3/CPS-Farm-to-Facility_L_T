which.max(model_1$residuals)
fitted(model_1)[24]
confint(model_1)
Average_status =mean(teengamb$status)
Average_income =mean(teengamb$income)
Average_verbal =mean(teengamb$verbal)
new_df <- data.frame(sex = 1,"status" = Average_status, "income" = Average_income, verbal =Average_verbal )
predict(model_1, new_df, interval = "prediction")
model_income<-lm(gamble~income, data = teengamb)
summary(model_income)
anova(model_1, model_income)
anova(model_income,model_1)
hipmod <- lm(hipcenter ~ Age+ Weight + Ht, data= seatpos)
summary(hipmod)
hipmod <- lm(hipcenter ~ Age+ Weight + Ht, data= seatpos)
summary(hipmod)
hipmod_shoes <- lm(hipcenter ~ Age+ Weight + Ht +HtShoes, data= seatpos)
summary(hipmod_shoes)
anova(hipmod_shoes,hipmod)
library(faraway)
colnames(teengamb)
model_1<-lm(gamble~sex+status+income+verbal, data = teengamb)
summary (model_1)
model_1$coefficients
which.max(model_1$residuals)
fitted(model_1)[24]
confint(model_1)
Average_status =mean(teengamb$status)
Average_income =mean(teengamb$income)
Average_verbal =mean(teengamb$verbal)
new_df <- data.frame(sex = 1,"status" = Average_status, "income" = Average_income, verbal =Average_verbal )
predict(model_1, new_df, interval = "prediction")
confint(model_1)
Average_status =mean(teengamb$status)
Average_income =mean(teengamb$income)
Average_verbal =mean(teengamb$verbal)
new_df <- data.frame(sex = 1,"status" = Average_status, "income" = Average_income, verbal =Average_verbal )
predict(model_1, new_df, interval = "prediction")
#Select growing season length (days)
F_growing_season_days<-function(min,mode,max){
days<-round(mc2d::rpert(n=1,min=min,mode=mode,max=max),0)
return (days)
}
F_growing_season_days(36, 40,42)
F_growing_season_days(36, 40,42)
F_growing_season_days(36, 40,42)
shiny::runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
runApp()
runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
runApp()
runApp('GitHubFiles/SCRM-Project/Trying')
runApp('GitHubFiles/SCRM-Project/Trying')
eco
model2<-lm(formula = home~ usborn + income + pop, data = eco)
library(faraway)
eco
model2<-lm(formula = home~ usborn + income + pop, data = eco)
plot(model2)
which.max(model2$residuals)
model1$residuals[12]
which.min(model2$residuals)
which.min(model2$residuals)
model2$residuals[29]
model2$residuals[12]
which.max(hatvalues(model2))
hatvalues(model1)[5]
hatvalues(model2)[5]
sort(cooks.distance(model2))
swiss
model3<- lm(Fertility~Agriculture+Examination+Education+Catholic+Infant.Mortality)
model3<- lm(Fertility~Agriculture+Examination+Education+Catholic+Infant.Mortality, data = swiss)
model3_standardr<-rstandard(model3)
model3_standardr<-rstandard(model3)
plot(model3_standardr, model3$residuals,
xlab="Standardized Residuals",
ylab="Least Square Residuals",
abline(0, 0)
model3_standardr<-rstandard(model3)
plot(model3_standardr, model3$residuals
xlab="Standardized Residuals",
ylab="Least Square Residuals",
abline(0, 0) )
model3_standardr<-rstandard(model3)
plot(model3_standardr, model3$residuals,
xlab="Standardized Residuals",
ylab="Least Square Residuals",
abline(0, 0))
rstudent(model3)
qt(0.95)
qt(0.95, swiss)
qt(0.05, df= df.residual(model3), lower = Flase)
qt(0.05, df= df.residual(model3), lower = F)
#critical
which(abs(rstudent(model3))>1.68)
qt(0.05/2*nobs(model3), df= df.residual(model3), lower = F)
qt(0.05/(2*nobs(model3)), df= df.residual(model3), lower = F)
#critical
which(abs(rstudent(model3))>3.522795)
shiny::runApp('GitHubFiles/SCRM-Project/Trying')
for (i in 1:9){
qqnorm(rgeom(50))
}
par(mfrow = c(3,3), pty= "a")
par(mfrow = c(3,3), pty= "s")
for (i in 1:9){
qqnorm(rgeom(50, prob = 0.4))
}
PP_100<-read.csv("Data_Tomato_Outputs/pp_hs_1_100.csv")
PP2_100<-read.csv("Data_Tomato_Outputs/pp_hs_2_100.csv")
PP6_100<-read.csv("Data_Tomato_Outputs/pp_hs_3_100.csv")
PP60_100<-read.csv("Data_Tomato_Outputs/pp_hs_4_100.csv")
PP20M_100<-read.csv("Data_Tomato_Outputs/pp_hs_5_100.csv")
PP60M_100<-read.csv("Data_Tomato_Outputs/pp_hs_6_100.csv")
TR20T_100<-Get_PP_df(PP2= PP2_100)
TR20T_100$Sampling<-"20 Tomatoes"
TR2T_100<-Get_PP_df(PP2= PP_100)
TR2T_100$Sampling<-"2 Tomatoes"
TR6T_100<-Get_PP_df(PP= PP6_100)
TR6T_100$Sampling<-"6 Tomatoes"
TR60T_100<-Get_PP_df(PP= PP60_100)
TR60T_100$Sampling<-"60 Tomatoes"
TR20TM_100<-Get_PP_df(PP= PP20M_100)
TR20TM_100$Sampling<-"20 Tomato Mash"
TR60TM_100<-Get_PP_df(PP= PP60M_100)
TR60TM_100$Sampling<-"60 Tomato Mash"
TR_All_100<-rbind(TR2T_100,TR6T_100,TR20T_100,TR60T_100,TR20TM_100,TR60TM_100)
TR_All_100$Sampling<-factor(TR_All_100$Sampling, levels=c("2 Tomatoes", "6 Tomatoes", "20 Tomatoes" , "60 Tomatoes", "20 Tomato Mash", "60 Tomato Mash"))
TR_All_100$ContSpread<-"10% Cluster"
TR_All_100%>%
filter(Sampling == "2 Tomatoes" | Sampling == "20 Tomatoes") %>%
ggplot()+
geom_col(aes(x = X6, y = total,fill = class),position = position_identity(), alpha = 0.9)+
geom_point(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.5, size = 1)+
geom_smooth(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.1,span = 0.9, size = 0.7, se=F )+
scale_y_continuous(labels = scales::comma,sec.axis = sec_axis(~./10000000, name = 'Risk Mitigation Power'))+
xlab("Day when contamination event happened")+
ylab("Tota Adulterant Cells (TAC) @ sampling point")+
facet_grid(Sampling~Pick, scales = "free_x")+
scale_fill_discrete("Contamination Outcome")
library(tidyverse)
library(scales)
library(forcats)
PP_100<-read.csv("Data_Tomato_Outputs/pp_hs_1_100.csv")
PP2_100<-read.csv("Data_Tomato_Outputs/pp_hs_2_100.csv")
PP6_100<-read.csv("Data_Tomato_Outputs/pp_hs_3_100.csv")
PP60_100<-read.csv("Data_Tomato_Outputs/pp_hs_4_100.csv")
PP20M_100<-read.csv("Data_Tomato_Outputs/pp_hs_5_100.csv")
PP60M_100<-read.csv("Data_Tomato_Outputs/pp_hs_6_100.csv")
TR20T_100<-Get_PP_df(PP2= PP2_100)
TR20T_100$Sampling<-"20 Tomatoes"
TR2T_100<-Get_PP_df(PP2= PP_100)
TR2T_100$Sampling<-"2 Tomatoes"
TR6T_100<-Get_PP_df(PP= PP6_100)
TR6T_100$Sampling<-"6 Tomatoes"
TR60T_100<-Get_PP_df(PP= PP60_100)
TR60T_100$Sampling<-"60 Tomatoes"
TR20TM_100<-Get_PP_df(PP= PP20M_100)
TR20TM_100$Sampling<-"20 Tomato Mash"
TR60TM_100<-Get_PP_df(PP= PP60M_100)
TR60TM_100$Sampling<-"60 Tomato Mash"
TR_All_100<-rbind(TR2T_100,TR6T_100,TR20T_100,TR60T_100,TR20TM_100,TR60TM_100)
TR_All_100$Sampling<-factor(TR_All_100$Sampling, levels=c("2 Tomatoes", "6 Tomatoes", "20 Tomatoes" , "60 Tomatoes", "20 Tomato Mash", "60 Tomato Mash"))
TR_All_100$ContSpread<-"10% Cluster"
TR_All_100%>%
filter(Sampling == "2 Tomatoes" | Sampling == "20 Tomatoes") %>%
ggplot()+
geom_col(aes(x = X6, y = total,fill = class),position = position_identity(), alpha = 0.9)+
geom_point(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.5, size = 1)+
geom_smooth(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.1,span = 0.9, size = 0.7, se=F )+
scale_y_continuous(labels = scales::comma,sec.axis = sec_axis(~./10000000, name = 'Risk Mitigation Power'))+
xlab("Day when contamination event happened")+
ylab("Tota Adulterant Cells (TAC) @ sampling point")+
facet_grid(Sampling~Pick, scales = "free_x")+
scale_fill_discrete("Contamination Outcome")
PP_100<-read.csv("Data_Tomato_Outputs/pp_hs_1_100.csv")
PP2_100<-read.csv("Data_Tomato_Outputs/pp_hs_2_100.csv")
PP6_100<-read.csv("Data_Tomato_Outputs/pp_hs_3_100.csv")
PP60_100<-read.csv("Data_Tomato_Outputs/pp_hs_4_100.csv")
PP20M_100<-read.csv("Data_Tomato_Outputs/pp_hs_5_100.csv")
PP60M_100<-read.csv("Data_Tomato_Outputs/pp_hs_6_100.csv")
TR20T_100<-Get_PP_df(PP2= PP2_100)
TR20T_100$Sampling<-"20 Tomatoes"
TR2T_100<-Get_PP_df(PP2= PP_100)
TR2T_100$Sampling<-"2 Tomatoes"
TR6T_100<-Get_PP_df(PP= PP6_100)
TR6T_100$Sampling<-"6 Tomatoes"
TR60T_100<-Get_PP_df(PP= PP60_100)
TR60T_100$Sampling<-"60 Tomatoes"
TR20TM_100<-Get_PP_df(PP= PP20M_100)
TR20TM_100$Sampling<-"20 Tomato Mash"
TR60TM_100<-Get_PP_df(PP= PP60M_100)
TR60TM_100$Sampling<-"60 Tomato Mash"
TR_All_100<-rbind(TR2T_100,TR6T_100,TR20T_100,TR60T_100,TR20TM_100,TR60TM_100)
TR_All_100$Sampling<-factor(TR_All_100$Sampling, levels=c("2 Tomatoes", "6 Tomatoes", "20 Tomatoes" , "60 Tomatoes", "20 Tomato Mash", "60 Tomato Mash"))
TR_All_100$ContSpread<-"10% Cluster"
TR_All_100%>%
filter(Sampling == "2 Tomatoes" | Sampling == "20 Tomatoes") %>%
ggplot()+
geom_col(aes(x = X6, y = total,fill = class),position = position_identity(), alpha = 0.9)+
geom_point(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.5, size = 1)+
geom_smooth(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.1,span = 0.9, size = 0.7, se=F )+
scale_y_continuous(labels = scales::comma,sec.axis = sec_axis(~./10000000, name = 'Risk Mitigation Power'))+
xlab("Day when contamination event happened")+
ylab("Tota Adulterant Cells (TAC) @ sampling point")+
facet_grid(Sampling~Pick, scales = "free_x")+
scale_fill_discrete("Contamination Outcome")
PP_100<-read.csv("Data_Tomato_Outputs/pp_hs_1_100.csv")
setwd("~/GitHubFiles/CPS-Farm-to-Facility_L_T/Model")
PP_100<-read.csv("Data_Tomato_Outputs/pp_hs_1_100.csv")
PP2_100<-read.csv("Data_Tomato_Outputs/pp_hs_2_100.csv")
PP6_100<-read.csv("Data_Tomato_Outputs/pp_hs_3_100.csv")
PP60_100<-read.csv("Data_Tomato_Outputs/pp_hs_4_100.csv")
PP20M_100<-read.csv("Data_Tomato_Outputs/pp_hs_5_100.csv")
PP60M_100<-read.csv("Data_Tomato_Outputs/pp_hs_6_100.csv")
TR20T_100<-Get_PP_df(PP2= PP2_100)
TR20T_100$Sampling<-"20 Tomatoes"
TR2T_100<-Get_PP_df(PP2= PP_100)
TR2T_100$Sampling<-"2 Tomatoes"
TR6T_100<-Get_PP_df(PP= PP6_100)
TR6T_100$Sampling<-"6 Tomatoes"
TR60T_100<-Get_PP_df(PP= PP60_100)
TR60T_100$Sampling<-"60 Tomatoes"
TR20TM_100<-Get_PP_df(PP= PP20M_100)
TR20TM_100$Sampling<-"20 Tomato Mash"
TR60TM_100<-Get_PP_df(PP= PP60M_100)
TR60TM_100$Sampling<-"60 Tomato Mash"
TR_All_100<-rbind(TR2T_100,TR6T_100,TR20T_100,TR60T_100,TR20TM_100,TR60TM_100)
TR20T_100<-Get_PP_df(PP2= PP2_100)
Get_PP_df<-function(PP2){
R1<-PP2 %>%
filter(X1 == "No") %>%
group_by(X6) %>%
summarize(total =sum(X0)) %>%
mutate(class= "Total Rejected")
T1<-PP2 %>%
filter(X1 == "No") %>%
group_by(X6) %>%
summarize(total =sum(CFU_Bef_Pick1PHS),Prot_Rate = sum(X0)/sum(CFU_Bef_Pick1PHS)) %>%
mutate(class= "Total Available")
TR1<-T1%>%
bind_rows(R1) %>%
mutate(Pick = "PH sampling Pick 1")
R2<-PP2 %>%
filter(X3 == "No") %>%
group_by(X6) %>%
summarize(total =sum(X2))%>%
mutate(class= "Total Rejected")
T2<-PP2 %>%
filter(X3 == "No") %>%
group_by(X6) %>%
summarize(total =sum(CFU_Bef_Pick2PHS),Prot_Rate = sum(X2)/sum(CFU_Bef_Pick2PHS)) %>%
mutate(class= "Total Available")
TR2<-T2%>%
bind_rows(R2) %>%
mutate(Pick = "PH sampling Pick 2")
R3<-PP2 %>%
filter(X5 == "No") %>%
group_by(X6) %>%
summarize(total =sum(X4))%>%
mutate(class= "Total Rejected")
T3<-PP2 %>%
filter(X5 == "No") %>%
group_by(X6) %>%
summarize(total =sum(CFU_Bef_Pick3PHS),Prot_Rate = sum(X4)/sum(CFU_Bef_Pick3PHS)) %>%
mutate(class= "Total Available")
TR3<-T3%>%
bind_rows(R3) %>%
mutate(Pick = "PH sampling Pick 3")
TR_Tog<-rbind(TR1,TR2,TR3)
return (TR_Tog)
}
PP_100<-read.csv("Data_Tomato_Outputs/pp_hs_1_100.csv")
PP2_100<-read.csv("Data_Tomato_Outputs/pp_hs_2_100.csv")
PP6_100<-read.csv("Data_Tomato_Outputs/pp_hs_3_100.csv")
PP60_100<-read.csv("Data_Tomato_Outputs/pp_hs_4_100.csv")
PP20M_100<-read.csv("Data_Tomato_Outputs/pp_hs_5_100.csv")
PP60M_100<-read.csv("Data_Tomato_Outputs/pp_hs_6_100.csv")
TR20T_100<-Get_PP_df(PP2= PP2_100)
TR20T_100$Sampling<-"20 Tomatoes"
TR2T_100<-Get_PP_df(PP2= PP_100)
TR2T_100$Sampling<-"2 Tomatoes"
TR6T_100<-Get_PP_df(PP= PP6_100)
TR6T_100$Sampling<-"6 Tomatoes"
TR60T_100<-Get_PP_df(PP= PP60_100)
TR60T_100$Sampling<-"60 Tomatoes"
TR20TM_100<-Get_PP_df(PP= PP20M_100)
TR20TM_100$Sampling<-"20 Tomato Mash"
TR60TM_100<-Get_PP_df(PP= PP60M_100)
TR60TM_100$Sampling<-"60 Tomato Mash"
TR_All_100<-rbind(TR2T_100,TR6T_100,TR20T_100,TR60T_100,TR20TM_100,TR60TM_100)
TR_All_100$Sampling<-factor(TR_All_100$Sampling, levels=c("2 Tomatoes", "6 Tomatoes", "20 Tomatoes" , "60 Tomatoes", "20 Tomato Mash", "60 Tomato Mash"))
TR_All_100$ContSpread<-"10% Cluster"
TR_All_100%>%
filter(Sampling == "2 Tomatoes" | Sampling == "20 Tomatoes") %>%
ggplot()+
geom_col(aes(x = X6, y = total,fill = class),position = position_identity(), alpha = 0.9)+
geom_point(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.5, size = 1)+
geom_smooth(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.1,span = 0.9, size = 0.7, se=F )+
scale_y_continuous(labels = scales::comma,sec.axis = sec_axis(~./10000000, name = 'Risk Mitigation Power'))+
xlab("Day when contamination event happened")+
ylab("Tota Adulterant Cells (TAC) @ sampling point")+
facet_grid(Sampling~Pick, scales = "free_x")+
scale_fill_discrete("Contamination Outcome")
TR_All_100%>%
#filter(Sampling == "2 Tomatoes" | Sampling == "20 Tomatoes") %>%
ggplot()+
geom_col(aes(x = X6, y = total,fill = class),position = position_identity(), alpha = 0.9)+
geom_point(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.5, size = 1)+
geom_smooth(aes(x = X6, y =Prot_Rate*10000000), alpha = 0.1,span = 0.9, size = 0.7, se=F )+
scale_y_continuous(labels = scales::comma,sec.axis = sec_axis(~./10000000, name = 'Risk Mitigation Power'))+
xlab("Day when contamination event happened")+
ylab("Tota Adulterant Cells (TAC) @ sampling point")+
facet_grid(Sampling~Pick, scales = "free_x")+
scale_fill_discrete("Contamination Outcome")
Powers<-read.csv("Data_Tomato_Outputs/Powers_Out_Rep.csv")
View(Powers)
Powers<-read.csv("Data_Tomato_Outputs/Powers_Out_Rep.csv")
Powers$Mass<-as.factor(Powers$Mass)
Powers$variable<-as.factor(Powers$variable)
Powers$Type<-as.factor(Powers$Type)
Powers$Type<-factor(Powers$Type,levels=c("Preharvest", "Harvest", "Receiving", "Packed Product"))
Powers$Mass<-factor(Powers$Mass,levels=c("2 Tomatoes", "6 Tomatoes", "20 Tomatoes", "60 Tomatoes","20 Tomato Mash", "60 Tomato Mash"))
Powers$Cont<-factor(Powers$Cont,levels=c("100%", "10%", "1%", "0.1%"))
Powers_Summary = Powers %>%
group_by(Type, Mass,Cont) %>%
#summarise(mean = median(value), CI_95 = mean + margin_calc(value),CI_05 = mean - margin_calc(value))
summarise(mean = median(value), CI_95 = quantile(value, 0.90),CI_05 = quantile(value, 0.1))
library(tidyverse)
library(scales)
library(forcats)
Powers_Summary = Powers %>%
group_by(Type, Mass,Cont) %>%
#summarise(mean = median(value), CI_95 = mean + margin_calc(value),CI_05 = mean - margin_calc(value))
summarise(mean = median(value), CI_95 = quantile(value, 0.90),CI_05 = quantile(value, 0.1))
Powers_Summary$Cont<-factor(Powers_Summary$Cont,levels=c("100%", "10%", "1%", "0.1%"))
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.5), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
Powers_Summary = Powers %>%
group_by(Type, Mass, variable, Cont) %>%
#summarise(mean = median(value), CI_95 = mean + margin_calc(value),CI_05 = mean - margin_calc(value))
summarise(mean = median(value), CI_95 = quantile(value, 0.90),CI_05 = quantile(value, 0.1))
Powers_Summary$Cont<-factor(Powers_Summary$Cont,levels=c("100%", "10%", "1%", "0.1%"))
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.5), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_boxplot(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.5), size = 0.5)+
#geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_boxplot(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.5), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
Powers_Summary = Powers %>%
group_by(Type, Mass, variable, Cont) %>%
#summarise(mean = median(value), CI_95 = mean + margin_calc(value),CI_05 = mean - margin_calc(value))
summarise(mean = median(value), CI_95 = quantile(value, 0.90),CI_05 = quantile(value, 0.1))
Powers_Summary$Cont<-factor(Powers_Summary$Cont,levels=c("100%", "10%", "1%", "0.1%"))
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_boxplot(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.5), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.5), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
write.csv(x = Powers_summary, file = "Powers Summary Picks.csv")
write.csv(x = Powers_Summary, file = "Powers Summary Picks.csv")
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.5), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
ggsave(filename="Plot Outputs/Powers_Per_Pick.jpeg",width = 25, height = 15, units = "cm", dpi = 600)
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.6), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.7), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.5))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
ggsave(filename="Plot Outputs/Powers_Per_Pick.jpeg",width = 25, height = 15, units = "cm", dpi = 600)
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.7), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.7))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
ggsave(filename="Plot Outputs/Powers_Per_Pick.jpeg",width = 25, height = 15, units = "cm", dpi = 600)
Powers_Summary %>%
ggplot(aes(x = Type, y = mean, color = Mass,shape = variable ,group = interaction(Mass, variable)))+
#geom_point(stroke = 4,position = position_dodge(0.3))+
#geom_line(aes(linetype= variable),size = 0.3,position = position_dodge(0.3))+
geom_pointrange(aes(ymin=CI_05, ymax=CI_95),position = position_dodge(0.7), size = 0.5)+
geom_errorbar(aes(ymin=CI_05, ymax=CI_95),width = 0.5, size =0.5,position = position_dodge(0.7))+
ylab("Sampling Plan Power")+
xlab("Sampling at Process Step")+
#scale_size_manual(name = "Tomatoes Sampled")+
scale_color_discrete(name="Sampling-Testing Plan")+
scale_shape_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3") )+
scale_linetype_discrete(name="Pick Number",labels = c("Power_Pick_1" ="Pick 1", "Power_Pick_2" ="Pick 2", "Power_Pick_3" ="Pick 3"))+
facet_wrap(~Cont,nrow = 2)+
theme_bw()
ggsave(filename="Plot Outputs/Powers_Per_Pick.jpeg",width = 25, height = 15, units = "cm", dpi = 600)
